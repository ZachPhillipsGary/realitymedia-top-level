let socket = io();

socket.on("connect", () => {
  console.log("connected to server");
});


function getStoredItem(item) {
  try {
    return JSON.parse(window.localStorage.getItem(item));
  } catch (e) {
    console.log(e)
    return {}
  }
}

function setStoredItem(item, data) {
  window.localStorage.setItem(item, JSON.stringify(data))
}

function sendRequest(url, body) {
  return fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body
    })
    .then(response => response.json())
    .then(data => {
      return data
    }).catch(e => {
      console.log(e)
      alert("Unable to login " + e.message);
    })
}

function messageHandler(event) {
  if (!ALLOWED_DOMAIN || ALLOWED_DOMAIN.toLowerCase() !== event.origin.toLowerCase()) {
    console.log("Blocked event", event, event.origin, ALLOWED_DOMAINS);
    return
  }

  const {
    action,
    key,
    value
  } = event.data

  if (action === "save") {
    setStoredItem(key, value)

  } else if (action === "get") {
    event.source.postMessage({
      action: 'returnData',
      key,
      message: JSON.parse(window.localStorage.getItem(key))
    }, '*');
  }
}

window.addEventListener("DOMContentLoaded", () => {
  try {
    window.addEventListener("message", messageHandler)
    if (LOCAL_STORAGE_KEY) {
      const storedData = getStoredItem(LOCAL_STORAGE_KEY);
      if (storedData) {
        Object.keys(storedData).forEach(key => {
          window.CONSTANTS[key] = storedData[key]
        });
        console.log(storedData)
      }
    }
  } catch (e) {
    console.log("Failed to load constants", e);
  }
})